gaussian_Prepare
1
24
gaussStruct.modelVariability=1; %1=a different model for each cell, 2=same model for flagRegioMat';
gaussStruct.typeOfModel=2; %2=REG 3=RF random forest, 4=ann;
gaussStruct.pcaFlag=0; %0 means no PCA-noNorm, 1 means PCA-norm;
gaussStruct.nPrec=5; %5 for PM, 2 for O3 (nox, voc), 1 for NO2 (nox);
gaussStruct.absDel=1; %absolute(0) or delta(1) values;
gaussStruct.arealPoint=0; %0 means areal and point summed up, 1 means areal and point separated;
gaussStruct.domain='ineris_7km_deliver_20150831';
gaussStruct.flagReg='ineris_7km_deliver_20150831';
gaussStruct.rad=[50 50 50 50 50]; %roughly 500km
gaussStruct.npat=[1 1 1 1 1];
gaussStruct.aqiFil='PM25_Y';%PM25, O3
gaussStruct.aqi='PM25';%PM25, O3
gaussStruct.nSc=27;
gaussStruct.Ide=[1:19];
gaussStruct.Val=[20:27];%1:26];
gaussStruct.rf=0 %window of cells of training varying F (1=one ring of cells used for training, surrounding the target cell0
gaussStruct.function_type=1; %1 means inverse distance 1/d^2, 2 means exponential
[X, Y] = meshgrid(-gaussStruct.rad(1):1:gaussStruct.rad(1), -gaussStruct.rad(1):1:gaussStruct.rad(1));
gaussStruct.coeff=2; %could vary from 0.5 to 5
gaussStruct.sigma_x_gaus = NaN; %from 2 to rf/2 both sigma_x_gaus and sigma_x_gaus
gaussStruct.sigma_y_gaus = NaN; %from 2 to rf/2 both sigma_x_gaus and sigma_x_gaus
gaussStruct.theta=NaN;      %from 0 to pi
gaussStruct.centr=gaussStruct.rad(1)+1;
gaussStruct.F=1./(1+sqrt(X.^2+Y.^2).^gaussStruct.coeff);
intermediateInfo=gaussStruct;